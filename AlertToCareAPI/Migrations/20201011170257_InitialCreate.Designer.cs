// <auto-generated />
using AlertToCareAPI.ICUDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlertToCareAPI.Migrations
{
    [DbContext(typeof(IcuContext))]
    [Migration("20201011170257_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("AlertToCareAPI.ICUDatabase.Entities.Beds", b =>
                {
                    b.Property<string>("BedId")
                        .HasColumnType("TEXT");

                    b.Property<string>("IcuId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("BedId");

                    b.ToTable("Beds");
                });

            modelBuilder.Entity("AlertToCareAPI.ICUDatabase.Entities.ICU", b =>
                {
                    b.Property<string>("IcuId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BedIdPrefix")
                        .HasColumnType("TEXT");

                    b.Property<int>("BedsCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Layout")
                        .HasColumnType("TEXT");

                    b.HasKey("IcuId");

                    b.ToTable("IcuList");
                });

            modelBuilder.Entity("AlertToCareAPI.ICUDatabase.Entities.Patient", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BedId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("IcuId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PatientId");

                    b.HasIndex("IcuId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("AlertToCareAPI.ICUDatabase.Entities.PatientAddress", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("HouseNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pincode")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.HasKey("PatientId");

                    b.ToTable("PatientAddress");
                });

            modelBuilder.Entity("AlertToCareAPI.ICUDatabase.Entities.Vitals", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<float>("Bpm")
                        .HasColumnType("REAL");

                    b.Property<float>("RespRate")
                        .HasColumnType("REAL");

                    b.Property<float>("Spo2")
                        .HasColumnType("REAL");

                    b.HasKey("PatientId");

                    b.ToTable("Vitals");
                });

            modelBuilder.Entity("AlertToCareAPI.ICUDatabase.Entities.Patient", b =>
                {
                    b.HasOne("AlertToCareAPI.ICUDatabase.Entities.ICU", null)
                        .WithMany("Patients")
                        .HasForeignKey("IcuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlertToCareAPI.ICUDatabase.Entities.PatientAddress", b =>
                {
                    b.HasOne("AlertToCareAPI.ICUDatabase.Entities.Patient", null)
                        .WithOne("Address")
                        .HasForeignKey("AlertToCareAPI.ICUDatabase.Entities.PatientAddress", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlertToCareAPI.ICUDatabase.Entities.Vitals", b =>
                {
                    b.HasOne("AlertToCareAPI.ICUDatabase.Entities.Patient", null)
                        .WithOne("Vitals")
                        .HasForeignKey("AlertToCareAPI.ICUDatabase.Entities.Vitals", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
